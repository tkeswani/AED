/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.HospitalAdminWork;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.Organization.Type;
import Business.Organization.OrganizationDirectory;
import Business.Person.Person;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import java.util.ArrayList;
import javax.swing.JOptionPane;

import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Tarun
 */
public class HospitalAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HospitalAdminWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private OrganizationDirectory organizationDirectory;
    private Enterprise enterprise;
    public HospitalAdminWorkAreaJPanel(JPanel userProcessContainer, OrganizationDirectory organizationDirectory, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organizationDirectory = organizationDirectory;
        this.enterprise = enterprise;
        labImageLabel.setVisible(false);
        doctorImageLabel.setVisible(false);
        hospitalReceptionistImageLabel.setVisible(false);
        labAssistantImageLabel.setVisible(false);
        HosRecImageLabel.setVisible(false);
        hospitalDoctorImageLabel.setVisible(false);
        
        populateTable();
        populateComboBox();
        populateOrgListComboBox();
        populateOrgUserComboBox();
        populateEmployeeTable();
        populateUsernameRoleTable();
        
    }

    public void populateComboBox() {
        orgTypeComboBox.removeAllItems();
        
        for(Organization.Type type : Organization.Type.values()){
            if(type.getValue().equals(type.Hospital_Doctor.getValue()) || type.getValue().equals(type.Lab.getValue()) || type.getValue().equals(type.Receptionist.getValue()))
                orgTypeComboBox.addItem(type);
                
    }
    }
    
    private void populateTable(){
        DefaultTableModel model = (DefaultTableModel) orgTable.getModel();
        
        model.setRowCount(0);
        
        for (Organization organization : organizationDirectory.getOrganizationList()){
            Object[] row = new Object[2];
            row[0] = organization.getOrganizationID();
            row[1] = organization.getName();
            
            model.addRow(row);
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orgTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        orgTypeComboBox = new javax.swing.JComboBox();
        createBtn = new javax.swing.JButton();
        labImageLabel = new javax.swing.JLabel();
        doctorImageLabel = new javax.swing.JLabel();
        hospitalReceptionistImageLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        employeeTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        employeeOrgListComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        employeeNameTxtField = new javax.swing.JTextField();
        submitBtn = new javax.swing.JButton();
        labAssistantImageLabel = new javax.swing.JLabel();
        hospitalDoctorImageLabel = new javax.swing.JLabel();
        HosRecImageLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        usernameRoleTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        orgUserComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        employeeUserComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        roleUserComboBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        usernameUserTxtField = new javax.swing.JTextField();
        passwordUserTxtField = new javax.swing.JTextField();
        createUserBtn = new javax.swing.JButton();

        orgTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DEPARTMENT ID", "DEPARTMENT NAME"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orgTable);

        jLabel1.setText("HOSPITAL DEPARTMENTS");

        createBtn.setText("ADD DEPARTMENT");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });

        labImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/HospitalAdminWork/Lab banner image.jpg"))); // NOI18N

        doctorImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/HospitalAdminWork/Doctor Organization Banner.jpg"))); // NOI18N

        hospitalReceptionistImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/HospitalAdminWork/Hospital Receptionist Banner.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(labImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(doctorImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(hospitalReceptionistImageLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(340, 340, 340)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(375, 375, 375)
                        .addComponent(jLabel1)
                        .addGap(59, 59, 59)
                        .addComponent(orgTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(466, 466, 466)
                        .addComponent(createBtn)))
                .addContainerGap(1451, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(129, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(orgTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(createBtn)
                .addGap(67, 67, 67)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(doctorImageLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labImageLabel, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(hospitalReceptionistImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane1.addTab("DEPARTMENTS", jPanel1);

        employeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EMPLOYEE ID", "EMPLOYEE NAME"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(employeeTable);

        jLabel3.setText("DEPARTMENT");

        employeeOrgListComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeOrgListComboBoxActionPerformed(evt);
            }
        });

        jLabel4.setText("EMPLOYEE NAME");

        submitBtn.setText("ADD EMPLOYEE");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        labAssistantImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/HospitalAdminWork/Lab Assistant Image.jpg"))); // NOI18N

        hospitalDoctorImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/HospitalAdminWork/Hospital Doctor Image.jpeg"))); // NOI18N

        HosRecImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/HospitalAdminWork/Hospital Receptionist Image.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(342, 342, 342)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(402, 402, 402)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(57, 57, 57)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(employeeOrgListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(employeeNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(514, 514, 514)
                        .addComponent(submitBtn))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(labAssistantImageLabel)
                        .addGap(89, 89, 89)
                        .addComponent(hospitalDoctorImageLabel)
                        .addGap(61, 61, 61)
                        .addComponent(HosRecImageLabel)))
                .addContainerGap(1646, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(employeeOrgListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(employeeNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addComponent(submitBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(labAssistantImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(hospitalDoctorImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(HosRecImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94))
        );

        jTabbedPane1.addTab("EMPLOYEES", jPanel2);

        usernameRoleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EMPLOYEE USERNAME", "EMPLOYEE ROLE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(usernameRoleTable);

        jLabel5.setText("DEPARTMENT");

        orgUserComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orgUserComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setText("EMPLOYEE");

        jLabel7.setText("EMPLOYEE ROLE");

        jLabel8.setText("USERNAME");

        jLabel9.setText("PASSWORD");

        createUserBtn.setText("CREATE");
        createUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(327, 327, 327)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(382, 382, 382)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(75, 75, 75)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(orgUserComboBox, 0, 150, Short.MAX_VALUE)
                            .addComponent(employeeUserComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(roleUserComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(usernameUserTxtField)
                            .addComponent(passwordUserTxtField)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(506, 506, 506)
                        .addComponent(createUserBtn)))
                .addContainerGap(2279, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(orgUserComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(employeeUserComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(roleUserComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(usernameUserTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(passwordUserTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addComponent(createUserBtn)
                .addContainerGap(111, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("USER ACCOUNT", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
        // TODO add your handling code here:
        Type type = (Type) orgTypeComboBox.getSelectedItem();
        int flag = 0;
        if(!(enterprise.getOrgDir().getOrganizationList().isEmpty())) {
        for(Organization organization : enterprise.getOrgDir().getOrganizationList()) {
            if(organization.getName().equals(type.getValue())) {
                JOptionPane.showMessageDialog(this, "Organization Already Added!!!");
                flag = 1;
                break;
            }
        }
        }
        if(flag == 0) {
            if(type.getValue().equalsIgnoreCase("Lab Organization")) {
                labImageLabel.setVisible(true);
            }
            if(type.getValue().equalsIgnoreCase("Specialist Doctor Organization")) {
                doctorImageLabel.setVisible(true);
            }
            if(type.getValue().equalsIgnoreCase("Receptionist Organization")) {
                hospitalReceptionistImageLabel.setVisible(true);
            }
        organizationDirectory.createOrganization(type);
        JOptionPane.showMessageDialog(this, "Department added!!!");
        populateTable();
        //populateOrganizationComboBox();
        populateOrgUserComboBox();
        populateOrgListComboBox();
        }
        
    }//GEN-LAST:event_createBtnActionPerformed

    public void populateOrgListComboBox() {
        employeeOrgListComboBox.removeAllItems();
        
        if(!(enterprise.getOrgDir().getOrganizationList().isEmpty())) {
        for(Organization organization:organizationDirectory.getOrganizationList()) {
            employeeOrgListComboBox.addItem(organization);
            if(organization.getName().equalsIgnoreCase("Lab Organization")) {
                labImageLabel.setVisible(true);
            }
            if(organization.getName().equalsIgnoreCase("Specialist Doctor Organization")) {
                doctorImageLabel.setVisible(true);
            }
            if(organization.getName().equalsIgnoreCase("Receptionist Organization")) {
                hospitalReceptionistImageLabel.setVisible(true);
            }
        }
        }
    }
    public void populateOrgUserComboBox() {
        orgUserComboBox.removeAllItems();
        if(!(organizationDirectory.getOrganizationList().isEmpty())) {
        for(Organization organization:organizationDirectory.getOrganizationList()) {
            orgUserComboBox.addItem(organization);
        }
        }
    }
    
    public void populateEmployeeTable() {
        DefaultTableModel model = (DefaultTableModel)employeeTable.getModel();
        
        model.setRowCount(0);
        if(!(enterprise.getOrgDir().getOrganizationList().isEmpty())) {
        for(Organization org: enterprise.getOrgDir().getOrganizationList()) {
            if(!(org.getPersonDirectory().getPersonList().isEmpty())) {
        for(Person employee:org.getPersonDirectory().getPersonList()) {
            Object[] row = new Object[2];
            //System.out.println(employee.getName());
            row[0] = ((Employee) employee).getId();
            row[1] = employee.getName();
            if(org.getName().equalsIgnoreCase("Lab Organization")) {
                labAssistantImageLabel.setVisible(true);
            }
            if(org.getName().equalsIgnoreCase("Specialist Doctor Organization")) {
                hospitalDoctorImageLabel.setVisible(true);
            }
            if(org.getName().equalsIgnoreCase("Receptionist Organization")) {
                HosRecImageLabel.setVisible(true);
            }
            model.addRow(row);
             
        }
            }
        }
        }
    }
    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // TODO add your handling code here:
        Organization organization = (Organization) employeeOrgListComboBox.getSelectedItem();
        if((employeeNameTxtField.getText().isEmpty()) || (!(employeeNameTxtField.getText().matches("[a-zA-Z]+")))) {
            JOptionPane.showMessageDialog(this, "Enter A Valid Employee Name!!!");
        }
        
        else {
                       
        String name = employeeNameTxtField.getText();
        if(organization.getName().equalsIgnoreCase("Specialist Doctor Organization")) {
            hospitalDoctorImageLabel.setVisible(true);
        }
        if(organization.getName().equalsIgnoreCase("Lab Organization")) {
            labAssistantImageLabel.setVisible(true);
        }
        if(organization.getName().equalsIgnoreCase("Receptionist Organization")) {
            HosRecImageLabel.setVisible(true);
        }
        Employee employee = new Employee();
        ArrayList<Person> person;
        person = organization.getPersonDirectory().getPersonList();
                
        person.add(employee);
        employee.setName(name);
        //organization.getEmployeeDirectory().createEmployee(name);
        JOptionPane.showMessageDialog(this, "Employee added!!!");
        populateEmployeeTable();
        populateEmployeeUserComboBox();
        populateRoleUserComboBox();
        //populateOrganizationComboBox();
        }
    }//GEN-LAST:event_submitBtnActionPerformed

    private void createUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserBtnActionPerformed
        // TODO add your handling code here:
        int flag =0;
        String username = usernameUserTxtField.getText();
        String password = passwordUserTxtField.getText();
        
        
        Organization organization = (Organization) orgUserComboBox.getSelectedItem();
        Employee employee = (Employee) employeeUserComboBox.getSelectedItem();
        Role role = (Role)roleUserComboBox.getSelectedItem();
        if(organization == null) {
            JOptionPane.showMessageDialog(this, "Organization Not Present!!!");
        }
        if(username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter A Valid Username/Password");
        }
        else if(!(usernameUserTxtField.getText().matches("[a-zA-Z0-9]+"))) {
            JOptionPane.showMessageDialog(this, "Enter A Valid Username!!!");
        }
        else if(!(passwordUserTxtField.getText().matches("[a-zA-Z0-9\\!%#@$]+"))) {
            JOptionPane.showMessageDialog(this, "Enter A Valid Password!!!");
        }
        else {
            for(UserAccount account:organization.getUserAccountDirectory().getUserAccountList()) {
                if(account.getUsername().equalsIgnoreCase(username)) {
                    JOptionPane.showMessageDialog(this, "User With Same Username Already Present!!!");
                    usernameUserTxtField.setText("");
                    passwordUserTxtField.setText("");
                    flag = 1;
                    break;
                }
            }
            if(flag == 0) {
                    organization.getUserAccountDirectory().createUserAccount(username, password, employee, role);
        
                    populateUsernameRoleTable();
                    JOptionPane.showMessageDialog(this, "Employee added to the Department");
                    usernameUserTxtField.setText("");
                    passwordUserTxtField.setText("");
            }
        }
    }//GEN-LAST:event_createUserBtnActionPerformed

    private void orgUserComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orgUserComboBoxActionPerformed
        // TODO add your handling code here:
        
        
            populateEmployeeUserComboBox();
            populateRoleUserComboBox();
        
        
    }//GEN-LAST:event_orgUserComboBoxActionPerformed

    private void employeeOrgListComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeOrgListComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_employeeOrgListComboBoxActionPerformed

    public void populateEmployeeUserComboBox() {
        employeeUserComboBox.removeAllItems();
        Organization organization = (Organization) orgUserComboBox.getSelectedItem();
        if(organization != null) {
                if(!(organization.getPersonDirectory().getPersonList().isEmpty())) {
        for(Person employee:organization.getPersonDirectory().getPersonList()) {
            employeeUserComboBox.addItem((Employee)employee);
        }
        }
        }
    }
    public void populateRoleUserComboBox() {
        roleUserComboBox.removeAllItems();
        Organization organization = (Organization) orgUserComboBox.getSelectedItem();
        if(organization != null) {
        for(Role role:organization.getSupportedRole()) {
            roleUserComboBox.addItem(role);
        }
        }
    }
    public void populateUsernameRoleTable() {
        DefaultTableModel model = (DefaultTableModel)usernameRoleTable.getModel();
        
        model.setRowCount(0);
        
        for(Organization organization: enterprise.getOrgDir().getOrganizationList()) {
            if(!(organization.getUserAccountDirectory().getUserAccountList().isEmpty())) {
            for(UserAccount userAccount:organization.getUserAccountDirectory().getUserAccountList()) {
                Object[] row = new Object[2];
                row[0] = userAccount.getUsername();
                row[1] = userAccount.getRole();
                
                model.addRow(row);
            }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HosRecImageLabel;
    private javax.swing.JButton createBtn;
    private javax.swing.JButton createUserBtn;
    private javax.swing.JLabel doctorImageLabel;
    private javax.swing.JTextField employeeNameTxtField;
    private javax.swing.JComboBox employeeOrgListComboBox;
    private javax.swing.JTable employeeTable;
    private javax.swing.JComboBox employeeUserComboBox;
    private javax.swing.JLabel hospitalDoctorImageLabel;
    private javax.swing.JLabel hospitalReceptionistImageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labAssistantImageLabel;
    private javax.swing.JLabel labImageLabel;
    private javax.swing.JTable orgTable;
    private javax.swing.JComboBox orgTypeComboBox;
    private javax.swing.JComboBox orgUserComboBox;
    private javax.swing.JTextField passwordUserTxtField;
    private javax.swing.JComboBox roleUserComboBox;
    private javax.swing.JButton submitBtn;
    private javax.swing.JTable usernameRoleTable;
    private javax.swing.JTextField usernameUserTxtField;
    // End of variables declaration//GEN-END:variables
}
